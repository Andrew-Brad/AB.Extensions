{
  "AB.Extensions.dll": {
    "C:\\Users\\Andrew\\Desktop\\Github\\AB.Extensions_Github_Project\\src\\AB.Extensions\\ConsoleExtensions.cs": {
      "AB.Extensions.ConsoleExtensions": {
        "System.Void AB.Extensions.ConsoleExtensions::WriteLineWithColor(System.String,System.ConsoleColor,System.ConsoleColor)": {
          "Lines": {
            "18": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "26": 0,
            "27": 0
          },
          "Branches": []
        },
        "System.Void AB.Extensions.ConsoleExtensions::WriteWithColor(System.String,System.ConsoleColor,System.ConsoleColor)": {
          "Lines": {
            "36": 0,
            "38": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "45": 0
          },
          "Branches": []
        },
        "System.Void AB.Extensions.ConsoleExtensions::ClearCurrentConsoleLine()": {
          "Lines": {
            "51": 0,
            "52": 0,
            "53": 0
          },
          "Branches": []
        },
        "System.Void AB.Extensions.ConsoleExtensions::ClearConsoleLine(System.Int32)": {
          "Lines": {
            "60": 0,
            "62": 0,
            "63": 0,
            "64": 0,
            "65": 0,
            "66": 0,
            "67": 0
          },
          "Branches": [
            {
              "Line": 66,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 66,
              "Offset": 46,
              "EndOffset": 51,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void AB.Extensions.ConsoleExtensions::WriteToBottomLineWithColor(System.String,System.ConsoleColor)": {
          "Lines": {
            "76": 0,
            "78": 0,
            "79": 0,
            "81": 0,
            "82": 0,
            "84": 0,
            "86": 0,
            "87": 0,
            "89": 0,
            "90": 0
          },
          "Branches": [
            {
              "Line": 86,
              "Offset": 57,
              "EndOffset": 59,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 86,
              "Offset": 57,
              "EndOffset": 83,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\Users\\Andrew\\Desktop\\Github\\AB.Extensions_Github_Project\\src\\AB.Extensions\\DateTimeExtensions.cs": {
      "AB.Extensions.DateTimeExtensions": {
        "System.Boolean AB.Extensions.DateTimeExtensions::IsBetween(System.DateTime,System.DateTime,System.DateTime,System.Boolean)": {
          "Lines": {
            "20": 4,
            "21": 4,
            "22": 4,
            "23": 4,
            "24": 4
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 2,
              "EndOffset": 4,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 21,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 21,
              "Offset": 23,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 2,
              "EndOffset": 49,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 21,
              "Offset": 56,
              "EndOffset": 58,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 1
            },
            {
              "Line": 21,
              "Offset": 56,
              "EndOffset": 67,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 2
            }
          ]
        },
        "System.Boolean AB.Extensions.DateTimeExtensions::IsLeapYear(System.DateTime)": {
          "Lines": {
            "27": 0,
            "28": 0,
            "29": 0
          },
          "Branches": []
        },
        "System.Boolean AB.Extensions.DateTimeExtensions::IsWeekend(System.DayOfWeek)": {
          "Lines": {
            "37": 0,
            "38": 0,
            "39": 0
          },
          "Branches": []
        },
        "System.Boolean AB.Extensions.DateTimeExtensions::IsWeekday(System.DayOfWeek)": {
          "Lines": {
            "47": 0,
            "48": 0,
            "51": 0,
            "52": 0,
            "54": 0
          },
          "Branches": [
            {
              "Line": 48,
              "Offset": 6,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 6,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 12,
              "EndOffset": 16,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 12,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        },
        "System.DateTime AB.Extensions.DateTimeExtensions::AddWorkdays(System.DateTime,System.Int32)": {
          "Lines": {
            "57": 0,
            "59": 0,
            "60": 0,
            "61": 0,
            "62": 0,
            "63": 0,
            "64": 0,
            "65": 0,
            "66": 0
          },
          "Branches": [
            {
              "Line": 59,
              "Offset": 35,
              "EndOffset": 3,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 59,
              "Offset": 35,
              "EndOffset": 37,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 60,
              "Offset": 107,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 63,
              "Offset": 94,
              "EndOffset": 62,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 63,
              "Offset": 94,
              "EndOffset": 96,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 60,
              "Offset": 107,
              "EndOffset": 109,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            }
          ]
        },
        "System.Int64 AB.Extensions.DateTimeExtensions::ToUnixTimestamp(System.DateTime)": {
          "Lines": {
            "73": 0,
            "74": 0,
            "75": 0,
            "76": 0
          },
          "Branches": []
        },
        "System.Void AB.Extensions.DateTimeExtensions::.cctor()": {
          "Lines": {
            "7": 0,
            "8": 0,
            "9": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\Andrew\\Desktop\\Github\\AB.Extensions_Github_Project\\src\\AB.Extensions\\IEnumerableExtensions.cs": {
      "AB.Extensions.IEnumerableExtensions": {
        "System.Linq.IOrderedEnumerable`1<T> AB.Extensions.IEnumerableExtensions::OrderBy(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,TKey>,AB.Extensions.Common/OrderByDirection)": {
          "Lines": {
            "25": 0,
            "26": 0,
            "27": 0
          },
          "Branches": []
        },
        "System.Linq.IOrderedEnumerable`1<T> AB.Extensions.IEnumerableExtensions::OrderBy(System.Collections.Generic.IEnumerable`1<T>,System.Func`2<T,TKey>,System.Collections.Generic.IComparer`1<TKey>,AB.Extensions.Common/OrderByDirection)": {
          "Lines": {
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "45": 0
          },
          "Branches": [
            {
              "Line": 42,
              "Offset": 2,
              "EndOffset": 4,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 42,
              "Offset": 2,
              "EndOffset": 14,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Linq.IOrderedEnumerable`1<T> AB.Extensions.IEnumerableExtensions::ThenBy(System.Linq.IOrderedEnumerable`1<T>,System.Func`2<T,TKey>,AB.Extensions.Common/OrderByDirection)": {
          "Lines": {
            "58": 0,
            "59": 0,
            "60": 0
          },
          "Branches": []
        },
        "System.Linq.IOrderedEnumerable`1<T> AB.Extensions.IEnumerableExtensions::ThenBy(System.Linq.IOrderedEnumerable`1<T>,System.Func`2<T,TKey>,System.Collections.Generic.IComparer`1<TKey>,AB.Extensions.Common/OrderByDirection)": {
          "Lines": {
            "74": 0,
            "75": 0,
            "76": 0,
            "77": 0,
            "78": 0
          },
          "Branches": [
            {
              "Line": 75,
              "Offset": 2,
              "EndOffset": 4,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 75,
              "Offset": 2,
              "EndOffset": 14,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.IEnumerable`1<TSource> AB.Extensions.IEnumerableExtensions::SkipUntil(System.Collections.Generic.IEnumerable`1<TSource>,System.Func`2<TSource,System.Boolean>)": {
          "Lines": {
            "111": 0,
            "112": 0,
            "113": 0,
            "114": 0,
            "115": 0
          },
          "Branches": [
            {
              "Line": 112,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 112,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 113,
              "Offset": 26,
              "EndOffset": 28,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 113,
              "Offset": 26,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Collections.Generic.IEnumerable`1<TSource> AB.Extensions.IEnumerableExtensions::TakeUntil(System.Collections.Generic.IEnumerable`1<TSource>,System.Func`2<TSource,System.Boolean>)": {
          "Lines": {
            "165": 5,
            "166": 0,
            "167": 0,
            "168": 5,
            "169": 5
          },
          "Branches": [
            {
              "Line": 166,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 166,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 5
            },
            {
              "Line": 167,
              "Offset": 26,
              "EndOffset": 28,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 167,
              "Offset": 26,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 5
            }
          ]
        },
        "System.Void AB.Extensions.IEnumerableExtensions::Shuffle(System.Collections.Generic.IList`1<T>)": {
          "Lines": {
            "190": 8,
            "191": 8,
            "192": 33498,
            "193": 33490,
            "194": 33490,
            "195": 33490,
            "196": 33490,
            "197": 33490,
            "198": 33490,
            "199": 33490,
            "200": 8
          },
          "Branches": [
            {
              "Line": 192,
              "Offset": 68,
              "EndOffset": 10,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 33490
            },
            {
              "Line": 192,
              "Offset": 68,
              "EndOffset": 70,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 8
            }
          ]
        },
        "System.Void AB.Extensions.IEnumerableExtensions::ForEach(System.Collections.Generic.IEnumerable`1<T>,System.Action`1<T>)": {
          "Lines": {
            "220": 0,
            "221": 0,
            "222": 0,
            "223": 0
          },
          "Branches": [
            {
              "Line": 221,
              "Offset": 32,
              "EndOffset": 11,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 221,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            }
          ]
        },
        "System.Boolean AB.Extensions.IEnumerableExtensions::IsMonotonicallyIncreasing(System.Collections.Generic.IEnumerable`1<T>)": {
          "Lines": {
            "233": 7,
            "234": 7,
            "235": 7,
            "236": 7,
            "237": 0,
            "238": 7,
            "239": 15,
            "240": 10,
            "241": 10,
            "242": 2,
            "243": 8,
            "244": 8,
            "245": 5,
            "247": 7
          },
          "Branches": [
            {
              "Line": 236,
              "Offset": 20,
              "EndOffset": 22,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 236,
              "Offset": 20,
              "EndOffset": 26,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 7
            },
            {
              "Line": 239,
              "Offset": 86,
              "EndOffset": 35,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 10
            },
            {
              "Line": 241,
              "Offset": 62,
              "EndOffset": 64,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 2
            },
            {
              "Line": 241,
              "Offset": 62,
              "EndOffset": 68,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 8
            },
            {
              "Line": 239,
              "Offset": 86,
              "EndOffset": 88,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 5
            }
          ]
        }
      },
      "AB.Extensions.IEnumerableExtensions/ThreadSafeRandom": {
        "System.Random AB.Extensions.IEnumerableExtensions/ThreadSafeRandom::get_ThisThreadsRandom()": {
          "Lines": {
            "210": 100470
          },
          "Branches": [
            {
              "Line": 210,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 210,
              "Offset": 7,
              "EndOffset": 40,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 33490
            }
          ]
        }
      }
    },
    "C:\\Users\\Andrew\\Desktop\\Github\\AB.Extensions_Github_Project\\src\\AB.Extensions\\IntExtensions.cs": {
      "AB.Extensions.IntExtensions": {
        "System.Int32 AB.Extensions.IntExtensions::LeadingDigit(System.Int32)": {
          "Lines": {
            "15": 8,
            "16": 9,
            "17": 7,
            "18": 7,
            "19": 7,
            "20": 7,
            "21": 7,
            "22": 7,
            "23": 8
          },
          "Branches": [
            {
              "Line": 16,
              "Offset": 3,
              "EndOffset": 5,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 3
            },
            {
              "Line": 16,
              "Offset": 3,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 5
            },
            {
              "Line": 16,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 16,
              "Offset": 18,
              "EndOffset": 27,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 7
            },
            {
              "Line": 17,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 3
            },
            {
              "Line": 17,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 3
            },
            {
              "Line": 17,
              "Offset": 46,
              "EndOffset": 48,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 3
            },
            {
              "Line": 17,
              "Offset": 54,
              "EndOffset": 56,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 2
            },
            {
              "Line": 17,
              "Offset": 54,
              "EndOffset": 65,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 1
            },
            {
              "Line": 17,
              "Offset": 46,
              "EndOffset": 74,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 80,
              "EndOffset": 82,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 80,
              "EndOffset": 91,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 38,
              "EndOffset": 100,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 106,
              "EndOffset": 108,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 114,
              "EndOffset": 116,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 114,
              "EndOffset": 125,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 106,
              "EndOffset": 134,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 140,
              "EndOffset": 142,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 140,
              "EndOffset": 151,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 0
            },
            {
              "Line": 17,
              "Offset": 30,
              "EndOffset": 157,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 4
            },
            {
              "Line": 17,
              "Offset": 159,
              "EndOffset": 161,
              "Path": 0,
              "Ordinal": 20,
              "Hits": 3
            },
            {
              "Line": 17,
              "Offset": 164,
              "EndOffset": 166,
              "Path": 0,
              "Ordinal": 22,
              "Hits": 1
            },
            {
              "Line": 17,
              "Offset": 164,
              "EndOffset": 172,
              "Path": 1,
              "Ordinal": 23,
              "Hits": 2
            },
            {
              "Line": 17,
              "Offset": 159,
              "EndOffset": 175,
              "Path": 1,
              "Ordinal": 21,
              "Hits": 1
            }
          ]
        }
      }
    },
    "C:\\Users\\Andrew\\Desktop\\Github\\AB.Extensions_Github_Project\\src\\AB.Extensions\\PagingRequest.cs": {
      "AB.Extensions.PagingRequest": {
        "System.Void AB.Extensions.PagingRequest::.ctor()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Void AB.Extensions.PagingRequest::.ctor(System.UInt32,System.UInt32)": {
          "Lines": {
            "17": 0,
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\Andrew\\Desktop\\Github\\AB.Extensions_Github_Project\\src\\AB.Extensions\\PagingResponse.cs": {
      "AB.Extensions.PagingResponse": {
        "System.Void AB.Extensions.PagingResponse::.ctor()": {
          "Lines": {
            "32": 0
          },
          "Branches": []
        },
        "System.Void AB.Extensions.PagingResponse::.ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)": {
          "Lines": {
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "45": 0,
            "46": 0,
            "47": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\Andrew\\Desktop\\Github\\AB.Extensions_Github_Project\\src\\AB.Extensions\\StringExtensions.cs": {
      "AB.Extensions.StringExtensions": {
        "System.String[] AB.Extensions.StringExtensions::SplitStringByLineBreaks(System.String,System.Boolean)": {
          "Lines": {
            "54": 6,
            "55": 6,
            "56": 6,
            "57": 6
          },
          "Branches": [
            {
              "Line": 55,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 5
            },
            {
              "Line": 55,
              "Offset": 8,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            }
          ]
        },
        "System.String AB.Extensions.StringExtensions::RemoveLineBreaks(System.String)": {
          "Lines": {
            "60": 0,
            "61": 0,
            "62": 0
          },
          "Branches": []
        },
        "System.String AB.Extensions.StringExtensions::ReplaceLineBreaks(System.String,System.String)": {
          "Lines": {
            "65": 0,
            "66": 0,
            "67": 0,
            "68": 0,
            "69": 0
          },
          "Branches": []
        },
        "System.Boolean AB.Extensions.StringExtensions::IsNull(T)": {
          "Lines": {
            "78": 0,
            "79": 0,
            "80": 0
          },
          "Branches": []
        },
        "System.Boolean AB.Extensions.StringExtensions::IsNull(System.Nullable`1<T>)": {
          "Lines": {
            "83": 0,
            "84": 0,
            "85": 0
          },
          "Branches": []
        },
        "System.String AB.Extensions.StringExtensions::ToReverseString(System.String)": {
          "Lines": {
            "108": 4,
            "109": 5,
            "110": 4,
            "111": 2,
            "112": 2,
            "113": 2,
            "114": 4
          },
          "Branches": [
            {
              "Line": 109,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 1
            },
            {
              "Line": 109,
              "Offset": 7,
              "EndOffset": 13,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 110,
              "Offset": 24,
              "EndOffset": 26,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            },
            {
              "Line": 110,
              "Offset": 24,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            }
          ]
        },
        "System.Guid AB.Extensions.StringExtensions::ToGuid(System.String,System.Boolean)": {
          "Lines": {
            "123": 5,
            "124": 5,
            "125": 5,
            "126": 2,
            "127": 2,
            "130": 3,
            "131": 0,
            "132": 3,
            "134": 5
          },
          "Branches": [
            {
              "Line": 125,
              "Offset": 17,
              "EndOffset": 19,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 125,
              "Offset": 17,
              "EndOffset": 24,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 3
            },
            {
              "Line": 131,
              "Offset": 28,
              "EndOffset": 30,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 131,
              "Offset": 28,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 3
            }
          ]
        },
        "T AB.Extensions.StringExtensions::ToEnumTypeOf(System.String)": {
          "Lines": {
            "137": 2,
            "138": 2,
            "139": 1
          },
          "Branches": []
        },
        "System.Int32 AB.Extensions.StringExtensions::CountOccurrencesOf(System.String,System.String)": {
          "Lines": {
            "142": 3,
            "143": 5,
            "144": 1,
            "145": 1,
            "146": 3,
            "147": 2,
            "148": 2,
            "149": 2,
            "150": 2,
            "151": 1,
            "152": 3
          },
          "Branches": [
            {
              "Line": 143,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 2
            },
            {
              "Line": 143,
              "Offset": 9,
              "EndOffset": 15,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 146,
              "Offset": 56,
              "EndOffset": 21,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 2
            },
            {
              "Line": 146,
              "Offset": 56,
              "EndOffset": 58,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 1
            }
          ]
        },
        "System.String AB.Extensions.StringExtensions::FileSizeString(System.UInt64)": {
          "Lines": {
            "168": 5,
            "169": 5,
            "171": 11,
            "172": 6,
            "173": 6,
            "174": 6,
            "175": 6,
            "176": 5,
            "177": 5
          },
          "Branches": [
            {
              "Line": 171,
              "Offset": 42,
              "EndOffset": 6,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 6
            },
            {
              "Line": 171,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 6
            },
            {
              "Line": 171,
              "Offset": 30,
              "EndOffset": 39,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 5
            },
            {
              "Line": 171,
              "Offset": 42,
              "EndOffset": 44,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 5
            }
          ]
        },
        "System.Void AB.Extensions.StringExtensions::.cctor()": {
          "Lines": {
            "12": 1,
            "29": 1,
            "158": 1
          },
          "Branches": []
        }
      }
    }
  },
  "AB.Extensions.Tests.dll": {
    "C:\\Users\\Andrew\\.nuget\\packages\\microsoft.net.test.sdk\\16.6.1\\build\\netcoreapp2.1\\Microsoft.NET.Test.Sdk.Program.cs": {
      "AutoGeneratedProgram": {
        "System.Void AutoGeneratedProgram::Main(System.String[])": {
          "Lines": {
            "4": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\Andrew\\Desktop\\Github\\AB.Extensions_Github_Project\\test\\AB.Extensions.Tests\\IEnumerableTests.cs": {
      "AB.Extensions.Tests.IEnumerableTests": {
        "System.Void AB.Extensions.Tests.IEnumerableTests::Shuffle_Empty_List_Returns_Empty()": {
          "Lines": {
            "13": 1,
            "15": 1,
            "17": 1,
            "19": 1,
            "20": 1
          },
          "Branches": []
        },
        "System.Void AB.Extensions.Tests.IEnumerableTests::Shuffle_Valid_List_Does_Shuffle(System.Int32,System.Int32)": {
          "Lines": {
            "31": 5,
            "33": 5,
            "34": 5,
            "37": 5,
            "40": 5,
            "41": 5
          },
          "Branches": []
        },
        "System.Void AB.Extensions.Tests.IEnumerableTests::Shuffle_Valid_List_Handles_1_Element()": {
          "Lines": {
            "45": 1,
            "47": 1,
            "48": 1,
            "51": 1,
            "54": 1,
            "55": 1
          },
          "Branches": []
        },
        "System.Void AB.Extensions.Tests.IEnumerableTests::Shuffle_Valid_List_Handles_0_Elements()": {
          "Lines": {
            "59": 1,
            "61": 1,
            "62": 1,
            "65": 1,
            "68": 1,
            "69": 1
          },
          "Branches": []
        },
        "System.Void AB.Extensions.Tests.IEnumerableTests::TakeUntil_Subset_Valid_List()": {
          "Lines": {
            "73": 1,
            "75": 1,
            "76": 1,
            "78": 1,
            "80": 1,
            "81": 1
          },
          "Branches": []
        },
        "System.Void AB.Extensions.Tests.IEnumerableTests::TakeUntil_All_Elements_Valid_List(System.Int32)": {
          "Lines": {
            "89": 4,
            "91": 4,
            "92": 4,
            "94": 4,
            "96": 4,
            "97": 4
          },
          "Branches": []
        },
        "System.Void AB.Extensions.Tests.IEnumerableTests::Is_Monotonically_Increasing_Get_Enumerator(System.Int32[],System.Boolean)": {
          "Lines": {
            "108": 7,
            "112": 7,
            "114": 7,
            "115": 7
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\Andrew\\Desktop\\Github\\AB.Extensions_Github_Project\\test\\AB.Extensions.Tests\\IntExtensionsTests.cs": {
      "AB.Extensions.Tests.IntExtensionsTests": {
        "System.Void AB.Extensions.Tests.IntExtensionsTests::Int_Get_First_Digit(System.Int32,System.Int32)": {
          "Lines": {
            "17": 8,
            "21": 8,
            "24": 8,
            "25": 8
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\Andrew\\Desktop\\Github\\AB.Extensions_Github_Project\\test\\AB.Extensions.Tests\\DateTimeExtensionsTests.cs": {
      "ABExtensions.Tests.DateTimeExtensionsTests": {
        "System.Void ABExtensions.Tests.DateTimeExtensionsTests::IsBetween_1()": {
          "Lines": {
            "11": 1,
            "12": 1,
            "13": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.DateTimeExtensionsTests::IsBetween_2()": {
          "Lines": {
            "17": 1,
            "18": 1,
            "19": 1,
            "20": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.DateTimeExtensionsTests::IsBetween_3()": {
          "Lines": {
            "24": 1,
            "25": 1,
            "26": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.DateTimeExtensionsTests::IsBetween_4()": {
          "Lines": {
            "30": 1,
            "31": 1,
            "32": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.DateTimeExtensionsTests::Year_2000_Is_LeapYear()": {
          "Lines": {
            "36": 1,
            "37": 1,
            "38": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.DateTimeExtensionsTests::Year_1921_Is_LeapYear()": {
          "Lines": {
            "42": 1,
            "43": 1,
            "44": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.DateTimeExtensionsTests::Year_1900_Is_LeapYear()": {
          "Lines": {
            "48": 1,
            "49": 1,
            "50": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.DateTimeExtensionsTests::LeapYears_Negative_Cases()": {
          "Lines": {
            "54": 1,
            "55": 1,
            "56": 1,
            "57": 1,
            "58": 1
          },
          "Branches": []
        }
      }
    },
    "C:\\Users\\Andrew\\Desktop\\Github\\AB.Extensions_Github_Project\\test\\AB.Extensions.Tests\\StringTests.cs": {
      "ABExtensions.Tests.StringTests": {
        "System.Void ABExtensions.Tests.StringTests::ReverseString_1(System.String,System.String)": {
          "Lines": {
            "20": 4,
            "22": 4,
            "25": 4,
            "26": 4
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::ToGuid_Valid_Throw_Bool()": {
          "Lines": {
            "30": 1,
            "32": 1,
            "33": 1,
            "36": 1,
            "39": 1,
            "40": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::ToGuid_Valid()": {
          "Lines": {
            "44": 1,
            "46": 1,
            "47": 1,
            "50": 1,
            "53": 1,
            "54": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::ToGuid_Invalid_Cases(System.String)": {
          "Lines": {
            "61": 3,
            "63": 3,
            "66": 3,
            "69": 3,
            "70": 3
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::String_To_Enum_Type_Of()": {
          "Lines": {
            "74": 1,
            "76": 1,
            "77": 1,
            "79": 1,
            "81": 1,
            "82": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::String_To_Enum_Type_Of_Invalid()": {
          "Lines": {
            "86": 1,
            "88": 1,
            "92": 1,
            "93": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::CountOccurrences()": {
          "Lines": {
            "97": 1,
            "99": 1,
            "100": 1,
            "102": 1,
            "104": 1,
            "105": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::CountOccurrences_empty_string_should_return_0()": {
          "Lines": {
            "109": 1,
            "111": 1,
            "112": 1,
            "114": 1,
            "116": 1,
            "117": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::CountOccurrences_empty_string_should_return_0_input_empty()": {
          "Lines": {
            "121": 1,
            "123": 1,
            "124": 1,
            "126": 1,
            "128": 1,
            "129": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::FormatFileSize(System.Int64,System.String)": {
          "Lines": {
            "139": 5,
            "141": 5,
            "144": 5,
            "147": 5,
            "148": 5
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::SplitQuotedCsvString(System.String,System.Int32)": {
          "Lines": {
            "156": 4,
            "158": 4,
            "161": 4,
            "162": 4
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::Cross_Platform_Line_Endings_Empty_Files_Produce_1_Line_Count(System.String,System.Int32)": {
          "Lines": {
            "170": 2,
            "172": 2,
            "175": 2,
            "176": 2,
            "179": 2,
            "180": 2
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::Windows_Line_Endings_Produce_Correct_Line_Count()": {
          "Lines": {
            "184": 1,
            "186": 1,
            "187": 1,
            "190": 1,
            "191": 1,
            "194": 1,
            "195": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::Windows_Line_Endings_Produce_Correct_Line_Count_Removing_Empty()": {
          "Lines": {
            "199": 1,
            "201": 1,
            "202": 1,
            "205": 1,
            "206": 1,
            "209": 1,
            "210": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::Unix_Line_Endings_Produce_Correct_Line_Count()": {
          "Lines": {
            "214": 1,
            "216": 1,
            "217": 1,
            "220": 1,
            "221": 1,
            "224": 1,
            "225": 1
          },
          "Branches": []
        },
        "System.Void ABExtensions.Tests.StringTests::Mac_Line_Endings_Produce_Correct_Line_Count()": {
          "Lines": {
            "229": 1,
            "231": 1,
            "232": 1,
            "235": 1,
            "236": 1,
            "239": 1,
            "240": 1
          },
          "Branches": []
        }
      }
    }
  }
}