# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
# File matching patterns reference: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/file-matching-patterns?view=vsts
# Task catalog reference: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/index?view=vsts
# The dotnet CLI Task full doc with arguments: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/dotnet-core-cli?view=vsts
# Predefined build variables: https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=vsts

trigger:
  branches:
    include:
    - '*'
    exclude:
    - skipci/*

# Build number formats: https://docs.microsoft.com/en-us/azure/devops/pipelines/build/options?view=vsts&tabs=yaml
name: $(date:yyyyMMdd)$(rev:.r)

jobs:
  - job: 'Linux_Build_Pack'
    pool:
      vmImage: 'ubuntu-18.04' # Other images: https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops#use-a-microsoft-hosted-agent
    steps:
    - template: azure-pipelines-build-pack-template.yml
      parameters:
        libraryProject: 'AB.Extensions'
  # - job: 'Mac_Build_Pack'
  #   pool:
  #     vmImage: 'macOS-latest'
  #     steps:
  #     - template: azure-pipelines-build-pack-template.yml
  #       parameters:
  #         libraryProject: 'AB.Extensions'
  - job: 'Win_Build_Pack'
    pool:
      vmImage: 'windows-2019'
    steps:
    - template: azure-pipelines-build-pack-template.yml
      parameters:
        libraryProject: 'AB.Extensions'    
    - task: PublishPipelineArtifact@0
      displayName: 'Publish Pipeline Artifacts'
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)